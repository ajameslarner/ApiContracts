name: Publish Nuget Package
on:
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet Runtime
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Fetch Latest Tag
        id: latesttag
        run: echo "::set-output name=version::$(git describe --tags `git rev-list --tags --max-count=1`)"

      - name: Update Version in Package
        run: |
          sed -i 's/<AssemblyVersion>.*<\/AssemblyVersion>/<AssemblyVersion>'"${{ steps.latesttag.outputs.version }}"'<\/Version>/g' ApiContracts.csproj

      - name: Build Project
        run: dotnet build ApiContracts.csproj --configuration Release --output ./bin/Release/net8.0

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet Runtime
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Test Project
        run: dotnet test ApiContracts.csproj --no-build --verbosity normal

  publish:
    needs: test
    runs-on: ubuntu-latest
    environment: 
      name: deployment
      url: ${{ steps.gitversion.outputs.majorMinorPatch }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet Runtime
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@main

      - name: Pack and Push Nuget Package
        run: |
          export PACKAGE_VERSION=${{ steps.gitversion.outputs.majorMinorPatch }}
          dotnet pack ApiContracts.csproj -p:Version=${PACKAGE_VERSION} -p:RepositoryUrl="https://github.com/ajameslarner/ApiContracts"  -o .
          dotnet nuget push ApiContracts.${PACKAGE_VERSION}.nupkg -k ${NUGET_API_KEY} -s https://api.nuget.org/v3/index.json
