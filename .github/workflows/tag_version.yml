name: Semantic Release Version with GitTools
on:
  push:
    branches:
      - 'main'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@main

      - name: Extract commit messages
        run: |
          echo "MAJOR_MSG=$(git log --grep='+major' -1 --pretty=%B)" >> $GITHUB_ENV
          echo "MINOR_MSG=$(git log --grep='+minor' -1 --pretty=%B)" >> $GITHUB_ENV
          echo "PATCH_MSG=$(git log --grep='+patch' -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Get changes
        id: get_changes
        run: |
          echo "CHANGES=$(git log --pretty=format:'- %s' ${{ steps.last_release.outputs.result }}..${{ github.sha }})" >> $GITHUB_ENV

      - name: Get contributors
        id: get_contributors
        run: |
          echo "CONTRIBUTORS<<EOF" >> $GITHUB_ENV
          git log --pretty=format:"- %an" ${{ github.event.before }}..${{ github.sha }} | sort | uniq >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }} # TODO: Set this to secrets.GITHUB_TOKEN when the repo changes to public
        with:
          tag_name: ${{ steps.gitversion.outputs.majorMinorPatch }}
          release_name: Release ${{ steps.gitversion.outputs.majorMinorPatch }}
          body: |
            ## What's Changed
            ${{ env.CHANGES }}
      
            ## New Contributors
            ${{ env.CONTRIBUTORS }}
      
            Full Changelog
          draft: false
          prerelease: false
