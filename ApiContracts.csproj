<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>False</AllowUnsafeBlocks>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <SignAssembly>False</SignAssembly>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>API Contracts</Title>
    <Authors>Anthony Larner</Authors>
    <Description>ApiContracts is a robust and efficient NuGet package designed to streamline API development. It provides a set of contracts that are used to validate the incoming request body against the model on the endpoint. This ensures data integrity, enhances security, and improves the overall reliability of your API endpoints. Simplify your API development process with ApiContracts.</Description>
    <Copyright>Copyright (c) 2024 Anthony Larner</Copyright>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/ajameslarner/ApiContracts</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>ApiContracts, API, Validation, RequestBody, ModelValidation, Endpoint, DataIntegrity, Security, Reliability, DotNet, NuGet, OpenSource</PackageTags>
    <NeutralLanguage>en-001</NeutralLanguage>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <PackageReleaseNotes>Release Notes for ApiContracts - Version 1.0.0

Date of Release
13/04/2024

Overview
This is the initial MVP release of API Contracts.

Features
- Feature: Define contracts use the abstract base class and assign your contract service name
- Feature: Attributes assignable to your endpoint model to define contract specifications
- Feature: Register the use of ApiContracts on your application build pipeline
- Feature: Use Swagger/OpenAPI filters to document your contract specifications
- Feature: String Extensions `ToCamelCase` and `ToPascalCase` included

Upcoming
- Handle DTOs that contain nested objects using recursion
- Handle additional content types (such as XML)
- Improve code documentation

For More Information
For more information, please visit GitHub to reach out to the author</PackageReleaseNotes>
    <PackageIcon>api_contracts_icon.png</PackageIcon>
    <PackageProjectUrl>https://github.com/ajameslarner/ApiContracts</PackageProjectUrl>
  </PropertyGroup>
  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
    <None Include="..\..\..\Documents\api_contracts_icon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <PackageReference Include="Microsoft.AspNetCore.Http.Abstractions" Version="2.2.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.5.0" />
  </ItemGroup>
  <ItemGroup>
    <None Update="LICENSE">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Update="README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Update="Resources\api_contracts_icon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

</Project>
