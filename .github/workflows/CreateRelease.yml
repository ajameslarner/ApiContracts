name: Semantic Release Version with GitTools
on:
  push:
    branches:
      - 'main'
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@main

      - name: Extract commit messages
        run: |
          echo "MAJOR_MSG=$(git log --grep='+major' -1 --pretty=%B)" >> $GITHUB_ENV
          echo "MINOR_MSG=$(git log --grep='+minor' -1 --pretty=%B)" >> $GITHUB_ENV
          echo "PATCH_MSG=$(git log --grep='+patch' -1 --pretty=%B)" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }} # TODO: Set this to secrets.GITHUB_TOKEN when the repo changes to public
        with:
          tag_name: ${{ steps.gitversion.outputs.majorMinorPatch }}
          release_name: Release ${{ steps.gitversion.outputs.majorMinorPatch }}
          body: |
            ## What's Changed
            ---
            ${{ env.MAJOR_MSG != '' && '### üí• Major Changes:\n- ' || '' }} ${{ env.MAJOR_MSG }}
            ${{ env.MINOR_MSG != '' && '### ‚ú® Minor Changes:\n- ' || '' }} ${{ env.MINOR_MSG }}
            ${{ env.PATCH_MSG != '' && '### üêõ Patch Changes:\n- ' || '' }} ${{ env.PATCH_MSG }}
            
          draft: false
          prerelease: false
