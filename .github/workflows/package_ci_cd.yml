name: Package CI & CD
on:
  pull_request:
    types: [labeled, opened, closed, reopened, synchronize]
    branches: [main]
  workflow_dispatch:
    
env:
  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
  NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet Runtime
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'
          
      - name: Build Project
        run: dotnet build src/ApiContracts/ApiContracts.csproj --configuration Release --output ./bin/Release/net8.0

  Test:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet Runtime
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Test Project
        run: dotnet test tests/UnitTests/ApiContracts.UnitTests.csproj --verbosity normal

  deploy-alpha:
    if: github.event.label.name == 'alpha'
    needs: Test
    name: Deploy Alpha
    runs-on: ubuntu-latest
    environment: 
      name: Deploy NuGet [Alpha]
      url: ${{ steps.gitversion.outputs.majorMinorPatch }}-alpha.${{ steps.gitversion.outputs.PreReleaseNumber }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet Runtime
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@main
        
      - name: Build Project
        run: dotnet build /p:Version=${{ steps.gitversion.outputs.majorMinorPatch }}-alpha.${{ steps.gitversion.outputs.PreReleaseNumber }} src/ApiContracts/ApiContracts.csproj --configuration Release --output ./src/ApiContracts/bin/Release/net8.0

      - name: Pack and Push Nuget Package
        run: |
          export PACKAGE_VERSION=${{ steps.gitversion.outputs.majorMinorPatch }}-alpha.${{ steps.gitversion.outputs.PreReleaseNumber }}
          dotnet pack src/ApiContracts/ApiContracts.csproj -p:Version=${PACKAGE_VERSION} -p:RepositoryUrl="https://github.com/ajameslarner/ApiContracts" -o build
          dotnet nuget push build/ApiContracts.${PACKAGE_VERSION}.nupkg -k ${NUGET_API_KEY} -s https://api.nuget.org/v3/index.json

  deploy-beta:
    if: github.event.label.name == 'beta'
    needs: Test
    name: Deploy Beta
    runs-on: ubuntu-latest
    environment: 
      name: Deploy NuGet [Beta]
      url: ${{ steps.gitversion.outputs.majorMinorPatch }}-beta.${{ steps.gitversion.outputs.PreReleaseNumber }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet Runtime
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@main
        
      - name: Build Project
        run: dotnet build /p:Version=${{ steps.gitversion.outputs.majorMinorPatch }}-beta.${{ steps.gitversion.outputs.PreReleaseNumber }} src/ApiContracts/ApiContracts.csproj --configuration Release --output ./src/ApiContracts/bin/Release/net8.0

      - name: Pack and Push Nuget Package
        run: |
          export PACKAGE_VERSION=${{ steps.gitversion.outputs.majorMinorPatch }}-beta.${{ steps.gitversion.outputs.PreReleaseNumber }}
          dotnet pack src/ApiContracts/ApiContracts.csproj -p:Version=${PACKAGE_VERSION} -p:RepositoryUrl="https://github.com/ajameslarner/ApiContracts" -o build
          dotnet nuget push build/ApiContracts.${PACKAGE_VERSION}.nupkg -k ${NUGET_API_KEY} -s https://api.nuget.org/v3/index.json

  deploy-release:
    if: github.event.pull_request.merged == true
    needs: Test
    name: Deploy Release
    runs-on: ubuntu-latest
    environment: 
      name: Deploy NuGet
      url: ${{ steps.gitversion.outputs.majorMinorPatch }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup dotnet Runtime
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@main
        
      - name: Build Project
        run: dotnet build /p:Version=${{ steps.gitversion.outputs.majorMinorPatch }} src/ApiContracts/ApiContracts.csproj --configuration Release --output ./src/ApiContracts/bin/Release/net8.0

      - name: Pack and Push Nuget Package
        run: |
          export PACKAGE_VERSION=${{ steps.gitversion.outputs.majorMinorPatch }}
          dotnet pack src/ApiContracts/ApiContracts.csproj -p:Version=${PACKAGE_VERSION} -p:RepositoryUrl="https://github.com/ajameslarner/ApiContracts" -o build
          dotnet nuget push build/ApiContracts.${PACKAGE_VERSION}.nupkg -k ${NUGET_API_KEY} -s https://api.nuget.org/v3/index.json
